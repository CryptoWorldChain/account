syntax = "proto3";

package org.brewchain.account.gens;

enum PTSTModule {
    TST = 0; // 交易
};

enum PTSTCommand {
	CSI = 0; // contract
	STT = 1; // transaction
	
	ECT = 2; // contract
	
	LTP = 3; // load test perpare
	LTE = 4; // load test exec
	MTT = 5; // thread test
	BFC = 6; // start new forks
	BFS = 7; // remove forks
	BCV = 8; // block chain view
	LTR = 9; // load test perpare result

	TCT = 10; // create token
	TCC = 12; // create contract transaction
	TEC = 13; // call contract transaction
}

message ReqCreateContract {
	string address = 1;
	string pubKey = 2;
	string privKey = 3;
	string data = 4;
}
message ReqCallContract {
	string address = 1;
	string pubKey = 2;
	string privKey = 3;
	string contract = 4;
	string data = 5;
	string functionjson = 6;
	string function = 7;
}

message RespContract {
	string txHash = 1;
	string contractHash = 2;
	repeated string trace = 3;
	int32 retcode = 4;
	string retmsg = 5;
}

message ReqCreateToken {
	string token = 1;
	string total = 2;
	ReqTransactionAccount fromAccount = 3;
}

message RespCreateToken {
	int32 retCode = 1;
	string regMsg = 2;
	string txHash = 3;
}

message MsgBlockView {
	string jsonStr = 1;
}

message ReqStartNewFork {
	int32 beginNumber = 1;
	string beginHash = 3;
	int32 count = 2;
}

message RespStartNewFork {
	string forkId = 1;
}

message ReqStopFork {
	
}

message RespStopFork {
	
}

message ReqThreadTransaction {
	int32 threads = 1;
}

message ReqCommonTest {
	string arg1 = 1;
}
message RespCommonTest {
	int32 retcode = 1;
	string retmsg = 2;
}

message ReqCreateTransactionTest {
	repeated ReqTransactionAccount input = 1;
	repeated ReqTransactionAccount output = 2;
	string data = 3;
}

message RespCreateTransactionTest {
	string txhash = 1;
	int32 retcode = 2;
	string retmsg = 3;
	repeated string trace = 4;
}

message ReqTransactionAccount {
	string address = 1;
	string amount = 2;
	string prikey = 3;
	string putkey = 4;
	string erc20amount = 5;
	string erc20symbol = 6;
	string erc721token = 7;
	string erc721symbol = 8;
}