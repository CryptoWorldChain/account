syntax = "proto3";

package org.brewchain.account.gens;

enum PACTModule {
	ACT = 0; // 账户，合约，合约代码
};
enum PACTCommand {
    CAC = 0; // 保存账户，合约
    GAC = 1; // 获取账户，合约
    UAC = 2; // 创建多重签名账户

    // DAC = 1; // 删除账户，合约
    // CAE = 3; // 检查是否存在账户，合约
    // GCA = 4; // 获取或创建账户
    // INO = 5; // 增加交易索引
    // SNO = 6; // 设置交易索引
    // CCC = 7; // 保存合约代码
    // GCC = 8; // 获取合约代码
    // AAB = 9; // 增加Balance
}
message ReqCreateAccount {
    string address = 1;
    string pubKey = 2;
}

message RespCreateAccount {
    int32 retCode = 1;
}

message ReqCreateUnionAccount {
    string address = 1;
    int32 max = 2;
    int32 acceptMax = 3;
    int32 acceptLimit = 4;
    repeated string relAddress = 5;
    repeated string signature = 6;
    repeated string pubKey = 7;
}

message RespCreateUnionAccount {
    int32 retCode = 1;
}

message ReqGetAccount {
    string address = 1;
}

message RespGetAccount {
    Account account = 1;
    int32 retCode = 2;
}

message ReqCreateContract {
    Contract contract = 1;
}

message RespCreateContract {
    int32 retCode = 1;
}

message Account {
    bytes address = 1;
    AccountValue value = 2;
}

message AccountValue {
    int32 nonce = 1;
    int64 balance = 2;
    bytes pubKey = 3;
    int32 max = 4;
    int32 acceptMax = 5;
    int32 acceptLimit = 6;
    repeated bytes address = 7;
    repeated AccountTokenValue tokens = 8;
}

message AccountTokenValue {
    string token = 1;
    int64 balance = 2;
}

message Contract {
    bytes address = 1;
    int32 nonce = 2;
    int64 balance = 3;
    bytes storage = 4;
    bytes codeHash = 5;
    bytes code = 6;
}

// 统计
// 转出账户个数
// 转入账户个数
// 新增账户个数
// 分账户日转出金额